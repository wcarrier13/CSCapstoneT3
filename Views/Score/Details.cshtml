@model Lizst.Models.SearchModel


@{
    ViewData["Title"] = "Details";
    float rating;
    string resultString;
}

<h1 style="padding-bottom:20px; padding-top:20px;">Details</h1>
<div class="card border-info">
    <h3 class="card-header bg-info" style="color:white;">@Model.Score.Title</h3>
    <div class="card-body">
        <h5>Score ID:</h5>
        <p class="card-text">@Model.Score.ScoreId</p>
        <h5>Title:</h5>
        <p class="card-text">@Model.Score.Title</p>
        <h5>Composer:</h5>
        <p class="card-text">@Model.Score.Composer</p>
        <h5>Genre:</h5>
        <p class="card-text">@Model.Score.Genre</p>
        <h5>Number of Parts:</h5>
        <p class="card-text">@Model.Score.NumberOfParts</p>
        <h5>Publisher:</h5>
        <p class="card-text">@Model.Score.Publisher</p>
        <h5>Secondary Classification:</h5>
        <p class="card-text">@Model.Score.SecondaryClassification</p>
        <h5>Notes:</h5>
        <p class="card-text">@Model.Score.Notes</p>
    </div>
</div>
<div style="padding-bottom:40px;">

</div>
<div class="card border-info">
    <h3 class="card-header bg-info" style="color:white;">Pieces</h3>
    <div class="card-body">
        <table class="table table-striped">
            <thead>
                
                <tr>
                    <th>
                        Instrument
                    </th>
                    <th>
                        Number of Parts
                    </th>
                    <th>
                        Rating
                    </th>
                </tr>
                
            </thead>
            <tbody>
                @for (int i = 0; i < @Model.Score.Pieces.Count; i++)
                {
                <tr>
                    <td>
                        @Model.Score.Pieces[i].Instrument
                    </td>
                    <td>
                        @Model.Score.Pieces[i].NumberofParts
                    </td>
                    
                        @{rating = @Model.Score.Pieces[i].AggregateRating;}
                        @if (rating >= 0 && rating < 1)
                        {
                            resultString = "Awful";
                        }
                        else if (rating >=1 && rating <2)
                        {
                            resultString = "Poor";
                        }
                        else if (rating >= 2 && rating < 3)
                        {
                            resultString = "Fair";
                        }
                        else if (rating >= 3 && rating < 4)
                        {
                            resultString = "Good";
                        }
                        else if (rating >= 4 && rating <= 5)
                        {
                            resultString = "Excellent";
                        }
                        else
                        {
                            resultString = "Unknown";
                        }

                     <td>
                         @resultString
                    </td>
                </tr>
                            }
            </tbody>
        </table>

    </div>
</div>



<div style="padding-top:30px;" class="text-center">
    <a style="width:120px;" asp-action="EditScore" asp-route-id="@Model.Score.ScoreId" class="btn btn-info">Edit</a>
    <a style="width:120px;" class="btn btn-info" asp-action="Index">Back to List</a>
    <a style="width:120px;" class="btn btn-info" asp-controller="Cart" asp-action="AddToCart" asp-route-id="@Model.Score.ScoreId">Add to Cart</a>
</div>
